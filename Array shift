// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

contract ArrayShift {
    uint[] public arr = [1, 2, 3];

    function remove(uint _index) external {
        require(_index < arr.length, "Index out of Bound");
        
        for (uint i = _index; i < arr.length - 1; i++) {
            arr[i] = arr[i+1];
        }
        arr.pop();
    }
}

//better way to save gas.
//This code should copy last element into the element to remove, and then remove the last element.

// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

contract ArrayReplaceLast {
    uint[] public arr = [1, 2, 3, 4];

    function remove(uint _index) external {
        arr[_index] = arr[arr.length - 1];
        arr.pop();
    }
}

