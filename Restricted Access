pragma solidity ^0.5.0;
contract access{

    address public owner = msg.sender;
    uint256 public creationTime = now;

    modifier onlyBy(address _owner) {
        require(_owner == msg.sender, "Sender not authorized");
        _;
    }

    function newOwner(address _newOwner) public onlyBy(owner) {
        _newOwner = msg.sender;
    }

    modifier onlyAfter(uint _time) {
        require(now >= _time, "too ealry");
        _;
    }

    function disown() public onlyBy(owner) onlyAfter(creationTime) {
        delete owner;
    }


}
