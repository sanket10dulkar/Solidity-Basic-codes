// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

contract EtherWallet {
    address payable public owner;

    constructor() {
        owner = payable(msg.sender);
    }
    
    receive() external payable {}
    
    function withdraw(uint _amount) external {
        require(msg.sender == owner, "not owner");
        
        (bool sent, ) = owner.call{value: _amount}("");
        require(sent, "failed to sent");
        
    }
}

// same as sending ether but in line 16 we will have owner.call instead of _to.call
